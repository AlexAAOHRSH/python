ЗАДАЧА
Есть базовый набор вопросов по разным темам  с несколькими вариантами ответа, из которых только один является верным.
Нужно создать программу, которая будет запускаться пользователем, давать ему возможность пройти тест с этими вопросами и получить результат
где видно на какой вопрос он ответил верно а на какой - нет.


Список вопросов и ответов - в файле ниже.
Вопросов ограниченное количество, так что если вы добавите свои или переформулируете текущие - это только к лучшему, 
придаст индивидуальности и улучшит ваши навыки


Сперва вам нужно выбрать пользовательский интерфейс, то, как ваша программа будет взаимодействовать с пользователем. 
Самое очевидное, что можно - командная строка или же ваш телеграм-бот. 
То, как она будет запускаться, задавать юзеру вопросы, давать ему возможность выбирать ответы, принимать их и выдавать результат.


##1
Самое базовое - вам нужно выбрать пользовательский интерфейс, то, как ваша программа будет взаимодействовать с пользователем. 


Программа должна запускаться либо через командную строку, либо через обращение к боту, либо оба варианта. 
Либо вы можете использовать какой-то еще интерфейс, который вам понравиться.

Юзер запускает процесс тестирования, выбирает вариант ответа, программа проверяет его и выдает результат, переходя к следующему вопросу.
После последнего вопроса юзер получает результат тестирования.
Как именно выдавать и считать результат - выбирайте сами.  В процентах верных ответах, выводить число правильных и неправильных ответов или еще что-то.


##2 
Добавьте возможность пройти тестирование только по вопросам определенной темы, скажем, только по исключениям или импортам.


Добавьте возможность выбора сложности теста:
проранжируйте вопросы по уровню сложности (исключительно по вашему усмотрению, так, заодно, можно будет понять, что для вас кажется сложным)


Объедините возможность выбора сложности и темы, чтобы, например, можно было настроить тест для себя как "максимальная сложность, тема - базовый Python"
Добавьте возможность выбора нескольких тем 




ВОПРОСЫ

###############################################################

Выберите верное написание для обозначения значения НИЧЕГО:
None
Nil
none
Null


###############################################################
Выберите, что из этого является неизменяемой структурой:

frozenset({“Some value”, None, 26})
{“Some value”, None, 26}
[“Some value”, None, 26]
{“Some value”: None, “size”: 26}



###############################################################
Выберите, какой из вариантов содержит только неизменяемый структуры:

int, str, float, None, frozenset, tuple
int, str, float, None, frozenset, dict
dict, list, tuple, int
set, str, tuple, int


###############################################################
Python это компилируемый язык или интерпретируемый:

Компилируемый
Интерпретируемый
Ни один из вариантов неверен
Нивелируемый


###############################################################
Можно ли в Python  трансформировать значения одного типа в другой?

Можно, с некоторыми логическими ограничениями. Например, число может стать строкой, но None не станет списком
Можно без всяких лимитов - хоть строку превратить в целое число
Нет, трансформация типа невозможна


###############################################################
Обязательно ли ключевое слово return при объявлении функции?

Да
Нет
Зависит от условий - иногда да, иногда нет
Если функция утрируемая, то да, в остальных случаях - нет
Только для интеграциональных функций



###############################################################
Что мы получим в результате выполнения данного кода?

def somefunc():
	return True

if somefunc():
	print(“Hello”)
else:
    print(“Bye!”)


Напечататься “Bye!”
Получим исключение AssertError
Ничего
Напечататься “Hello!”


###############################################################
Где допущена ошибка?

list(1,3,5,None, “Egor”)
frozenset({“name”: “My name”, “age”: 45})
frozenset({“My name”, “age”, 45})
8,15,6,23,42



###############################################################
Такое понятие как API:

Относиться только к работе с интернетом
Относиться только к работе с железом напрямую
Ни один из вариантов не верен
Это из области разработки видеоигр


###############################################################
Может ли быть API у операционной системы?
Да
Нет
Пойдем взорвем башгю "Арасаки", или хотя бы фургон поломаем!



###############################################################
Сцена, где устрашающий тайский боксер обмакивал забинтованные руки в клей и битое стекло из:
Кикбоксер 2
Кибоксер 1
Римейк Кикбоксера от 2015 года
Лучшие из лучших


###############################################################
Запустив данный код:
try:
	int("Hello")
except Exception:
	print("Hello!")

Мы получим:

В командной строке выведеться "Hello"
Ничего
Exception: Hello
Довольно устрашающее сообщение о том, что жизнь кортка и полна страданий



###############################################################
У нас есть функция
def myfunc():
	return 10

Какой результат мы получим вызвав ее 
myfunc()

None
10
<type 'function'>
<type 'integer'>



###############################################################
У нас есть папка со стрруктурой:

folder\
	main.py
	subfolder\
	some_file.py
	sub_file.py

Если я хочу подключить файл sub_file.py в main.py, что именно мне следует прописать в файле main.py

connect subfile.py to main.py
import subfolder.sub_file.py
import sub_file from subfolder
import sub_file.py from subfolder



###############################################################
Что произойдет если вызывать код: raise Exception("Some exception")

Интерпретатор вызовет исключение и получим в консоли Exception: Some exception
Мы получм сообщение о том, что код написан неверно
Ничего
Получим сценарий комедийного хоррора про маньяка с Винсом Воном


###############################################################
Какой из вариантов содержит исключительно упоминания протоколов?

BitTorrent, HTTP, HTTPS, протокол медицинского осмотра
Python, HTTPS, TCP/IP, MMS
TCP/IP, Megadeth, JavaScript, SMS



###############################################################
Если мы по протоколу HTTP посылаем на сервер запрос, что мы получим:

В любом случае получим  response
В зависимости от настроек - можем получить строку, джсон или еще что-то.
Либо response либо None



###############################################################
Писатель Питер Уотс, канадец, должен был писать сценарий к видеоигре Crysis 2, и ехал, для этого, на поезде, из Канады в Штаты. Однако, на границе, 
по пьяни подрался с пограничником, после чего, соответственно, был завернут обратно.
Питер Уотс после этого:

Поехавший алкаш
Все правильной сделал, борец с системой
Не читаю Питера Уотса - он занудный, мысли интересные, но истории рассказывать не умеет
Не было такого



###############################################################
У нас есть папка folder с двумя файлами  file_one.py  и file_two.py
folder\
	file_one.py  
	file_two.py

Если я хочу подключить из file_one.py в file_two.py все его содержимое, какой код мне использовать:

from file_one import *
import all from  file_one
from file_one.py import *
import * from  file_one
