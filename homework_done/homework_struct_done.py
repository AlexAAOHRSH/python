"""
############# ДЗ ################
Давайте продолжим нашу историю с персонализированным сообщением, только в этот раз попрактикуемся с извлечением и трансформацией данных из структур.


##### 1

У нас есть список данных о погоде с разными датами.

weather_info =  {"18.10.2020": {"weather": "Туман"},
				 "19.10.2020", {"weather": "Дождь"},
				 "20.10.2020", {"weather": "Ливень"},
				 "21.10.2020", {"weather": "Солнечно"}}

есть переменная ДАТА 
date = "20.10.2020"

Есть шаблон сообщения
message = "Сегодня <ДАТА> : <ПОГОДА>"


В зависимости от значения даты нужно взять подходящий по дате словарь из списка данных о погоде 
и подставить нужные значения оттуда в сообщение.

В результате должно получиться следующее
- меняете значение data например, на "19.10.2020"

выводите ,с помощью print, сообщение
print(message)
И получаете
"Сегодня 19.10.2020 : Ливень"
"""
weather_info_short = {"18.10.2020": {"weather": "Туман"},
                      "19.10.2020": {"weather": "Дождь"},
                      "20.10.2020": {"weather": "Ливень"},
                      "21.10.2020": {"weather": "Солнечно"}}

date = "19.10.2020"
weather_type_short = weather_info_short[date]["weather"]

message_short = "Сегодня {} : {}.".format(date, weather_type_short)
print(message_short, end="\n\n")



"""
##### 2 немного усложним - сделаем наши данные о погоде более содержательными.

weather_info = {
				"18.10.2020": {"weather": {"temp": 25, "weather_type": "Ливень"}}
  				"19.10.2020": {"weather": {"temp": 17, "weather_type": "Солнечно"}}
				"20.10.2020": {"weather": {"temp": 21, "weather_type": "Туман"}}
				"21.10.2020": {"weather": {"temp": 12, "weather_type": "Ветренно"}}
				}

Соответственно, теперь нужно повторить предыдущий пункт, только извлекать не строку, а словарь,
данные из которого подставить в сообщение. Модифицируйте переменную message

message = "Сегодня <ДАТА> : <ТЕМПЕРАТУРА> градусов, <ТИП ПОГОДЫ>"

print(message)
И получаете
"Сегодня 19.10.2020 : 25 градусов, Солнечно""

"""

weather_info_long = {
				"18.10.2020": {"weather": {"temp": 25, "weather_type": "Ливень"}},
  				"19.10.2020": {"weather": {"temp": 17, "weather_type": "Солнечно"}},
				"20.10.2020": {"weather": {"temp": 21, "weather_type": "Туман"}},
				"21.10.2020": {"weather": {"temp": 12, "weather_type": "Ветренно"}}
				}

weather_type_long = weather_info_long[date]["weather"]["weather_type"]

temperature = weather_info_long[date]["weather"]["temp"]

message_long = "Сегодня {} : {} градусов, {}.".format(date, temperature, weather_type_long)

print(message_long, end=2*"\n")


"""

##### 3
Окей, теперь поробуем увеличить надежность нашей программы.
Но, для этого, нам понадобиться применить операторы,который мы еще не прошли - условие. 
Условные операторы и циклы мы разберем на следующем занятии, а если есть желание - поробйте сейчас.

Итак, задача - осуществить две проверки.
Прежде, чем совершать подстанову в строку, давайте убедимся в том, что наш словарик не пустой.
В случае, если он не пуст - убедимся, что ключ, по корому мы ищем (дата) находиться внутри дикта.

Про условия:
неплохая статья с объяснением того, как условные операторы работают: https://pythonru.com/osnovy/if-else  

Про то, как узнать, есть ли ключ внутри дикта, а, точнее, в целом, находиться ли одна сущность среди других:

Как и в прошлый раз попробуем два вариант. Первый - попробовать загуглить. Как обычно будет посложнее, некоторые
ссылки будут вести не совсем туда, где лежит ответ который вам прямо сейчас нужен. Но это добавит поезного опыта в поиске.

"python key in dict", "python проверить есть ли ключ в словаре", "python проверить наличие ключа в словаре"

Либо сходите по этим ссылкам:

Вот тут даже пример подходящий - https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary

https://www.w3schools.com/python/gloss_python_check_if_dictionary_item_exists.asp

"""
if any(weather_info_long) and date in weather_info_long.keys():
    temperature = weather_info_long[date]["weather"]["temp"]
    weather_type = weather_info_long[date]["weather"]["weather_type"]
    print("Сегодня {} : {} градусов, {}.".format(date, temperature, weather_type))
else:
    print("Словарь погоды либо пуст, либо не имеет нужного ключа.")

