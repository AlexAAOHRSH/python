"""
Задача - написать скрипт, который будет брать набор аббревиатур валют и возвращать текст сообщения для пользователя,
 где будет расписана информация по заданным валютам.

- задаете последовательность из аббревиатур валют, в любй удобной форме, например ["USD", "GBP"] или ("RUB", "AUD")
- используйте одну из ссылок, на ваш выбор, для беларусского либо украинского нацбанков:
  requests.get(be_bank) - это использование продвинутой техники, использование запроса с нашего компьютера на сервер с данными.
  В будущем мы разберемся с тем, как это устроено, но пока, для использования, вы можете использовать ее как
  requsts.get(ссылка)
  например
  res = requsts.get(ссылка)
  в результате вы получите ОТВЕТ с сервера, но то еще не интересующий вас словарь, это именно response - объект из трех частей.
  оно содержит 
  - СТАТУС - числовое выражение результатов, статус 200 значит, что зарос прошел, 4ХХ - что недоступен.
  - ЗАГОЛОВКИ - техническая информация - ОС на сервере, время, и т.д.
  - ТЕЛО ЗАПРОСА - собственно, сами данные.
  Именно они нас интересуют. Поэтому извлечем их.
  Если мы просто запринтим результат нашего запроса
  
  res = requsts.get(ссылка)
  print(res)
  <[RESPONSE 200]>, либо не 200, в зависмости от результата.

  чтобы узнать статус отдельно, мы можем сделать так

  status = res.status_code
  200

  а тело, если наш статус 200

  data = res.json()
  print(data)
  ПРИМЕР(у вас он может отличаться):
    {"Cur_ID":298,"Cur_ParentID":190,"Cur_Code":"643","Cur_Abbreviation":"RUB","Cur_Name":"Российский рубль","Cur_Name_Bel":"Расійскі рубель","Cur_Name_Eng":"Russian Ruble","Cur_QuotName":"100 Российских рублей","Cur_QuotName_Bel":"100 Расійскіх рублёў","Cur_QuotName_Eng":"100 Russian Rubles","Cur_NameMulti":"Российских рублей","Cur_Name_BelMulti":"Расійскіх рублёў","Cur_Name_EngMulti":"Russian Rubles","Cur_Scale":100,"Cur_Periodicity":0,"Cur_DateStart":"2016-07-01T00:00:00","Cur_DateEnd":"2050-01-01T00:00:00"}



  Соответственно, что мы имеем:
  - ссылку, которая подзволяет, подставяляя в нее нужную вам аббревиатуру, получать данные с сайта нацбанка получть информацию о курсе
  - возможность извлечь эти данные в виде знакомых вам питоновских структур - списков, диктов, етс.

  Используя это нам нужно сделать следующее.
  - извлекать данные о валютах, используя  заданные аббревиатуры
  - используя шаблон сообщения, подставлять в него интересующие вас данные о валютах.


### ЗАДАНИЕ 1
- извлечем данные по курсу валюты на сегодня
- создадим шаблон сообщения, в которое будет подставляться информация о курсе
- сделаем так, чтобы мы задавали последовательность валютных аббревиатур
и наш скрит извлекал информацию окурсе каждой из них и все это комбинировал в одно сообщение 

#### ЗАДАНИЕ 2

Сделаем наш скрипт надежнее:
- в случае, если статус ответа не 200 - печать сообщение об ошибке
"""




import requests

allmessage = []

val_list = ["rub", "eur", "usd"]

for val in val_list:

  curr_url = f"https://www.nbrb.by/api/exrates/rates/{val}?parammode=2"

  response = requests.get(curr_url)

  if response.status_code == 200:
    
    currency = response.json()
    date = currency['Date']
    curr_name1 = currency['Cur_Name']
    rate = currency['Cur_OfficialRate']
    scale = currency['Cur_Scale']
    message = f"За {scale} {curr_name1} на {date} число получишь {rate} BYN "
    allmessage.append(message)

  else:
    print("Ошибка! Код возврата не равен 200")


print(allmessage)